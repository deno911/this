name: "🦕 Deno CI/CD"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  deno:
    runs-on: ${{matrix.os}}
    # Continue in case the canary run does not succeed
    continue-on-error: ${{matrix.canary}}
    env:
      DENO_DIR: .deno-cache
      CACHE_VERSION: ${{secrets.CACHE_VERSION}}
    strategy:
      matrix:
        os: [ ubuntu-20.04, macos-11, windows-2019 ]
        deno: [ v1.x ]
        canary: [ false ]
        include:
          - deno: canary
            os: ubuntu-20.04
            canary: true
    steps:
      - name: "⚙️ gitconfig"
        run: |
          sudo git config --system core.autocrlf false
          sudo git config --system core.eol lf

      - name: "⚙️ setup"
        uses: actions/cache@v2
        with:
          path: ${{env.DENO_DIR}}
          key: ${{env.CACHE_VERSION}}-${{hashFiles('./deps.ts')}}

      - name: "🧾 checkout"
        uses: actions/checkout@v3

      - name: "🦕 setup deno ${{matrix.deno}}"
        uses: denoland/setup-deno@main
        # uses: denoland/setup-deno@004814556e37c54a2f6e31384c9e18e983317366
        with:
          deno-version: ${{matrix.deno}}

      - name: "🦕 deno cache --reload"
        run: deno cache --reload --lock=lock.json --lock-write deps.ts

      - name: "🏃‍♂️ sdeno fmt"
        run: deno fmt --unstable

      - name: "🏃‍♂️ deno lint"
        run: deno lint --unstable

      - name: "🧪 deno test"
        run: deno test -A --no-check

      - name: "🧪 deno test --unstable"
        run: deno test -A --unstable --no-check
